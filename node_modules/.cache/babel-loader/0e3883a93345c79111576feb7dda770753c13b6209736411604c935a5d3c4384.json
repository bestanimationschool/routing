{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abhishek Tyagi\\\\Desktop\\\\Desktop\\\\MWF\\\\10.30-12.00\\\\my-app\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialTodos = [{\n  id: 1,\n  title: \"Todo 1\",\n  complete: false\n}, {\n  id: 2,\n  title: \"Todo 2\",\n  complete: false\n}, {\n  id: 3,\n  title: \"Todo 3\",\n  complete: false\n}];\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"COMPLETE\":\n      return state.map(todo => {\n        if (todo.id === action.id) {\n          return {\n            ...todo,\n            complete: !todo.complete\n          };\n        } else {\n          return todo;\n        }\n      });\n    default:\n      return state;\n  }\n};\nfunction Todos() {\n  _s();\n  const [todos, dispatch] = useReducer(reducer, initialTodos);\n  const handleComplete = todo => {\n    dispatch({\n      type: \"COMPLETE\",\n      id: todo.id\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: todo.complete,\n          onChange: () => handleComplete(todo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), todo.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), \"console\"]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n}\n_s(Todos, \"u4TrVHogQ4fo59FxNWf+bVaAFRg=\");\n_c = Todos;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(Todos, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 56,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["React","useReducer","ReactDOM","jsxDEV","_jsxDEV","Fragment","_Fragment","initialTodos","id","title","complete","reducer","state","action","type","map","todo","Todos","_s","todos","dispatch","handleComplete","children","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","root","createRoot","document","getElementById","render","$RefreshReg$"],"sources":["C:/Users/Abhishek Tyagi/Desktop/Desktop/MWF/10.30-12.00/my-app/src/index.js"],"sourcesContent":["import React, { useReducer } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nconst initialTodos = [\n    {\n        id: 1,\n        title: \"Todo 1\",\n        complete: false\n    },\n    {\n        id: 2,\n        title: \"Todo 2\",\n        complete: false\n    },\n    {\n        id: 3,\n        title: \"Todo 3\",\n        complete: false\n    }\n];\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"COMPLETE\":\n            return state.map((todo) => {\n                if (todo.id === action.id) {\n                    return { ...todo, complete: !todo.complete };\n                } else {\n                    return todo;\n                }\n            });\n        default:\n            return state;\n    }\n};\nfunction Todos() {\n    const [todos, dispatch] = useReducer(reducer, initialTodos);\n\n    const handleComplete = (todo) => {\n        dispatch({ type: \"COMPLETE\", id: todo.id });\n    }\n\n    return (\n        <>\n            {todos.map((todo) => (\n                <div key={todo.id}>\n                    <label>\n                        <input type=\"checkbox\" checked={todo.complete} onChange={() => handleComplete(todo)} />\n                        {todo.title} \n                    </label>\n                    console\n                </div>\n            ))}\n        </>\n    );\n}\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<Todos />)"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,QAAQ,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACxC,MAAMC,YAAY,GAAG,CACjB;EACIC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,QAAQ;EACfC,QAAQ,EAAE;AACd,CAAC,EACD;EACIF,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,QAAQ;EACfC,QAAQ,EAAE;AACd,CAAC,EACD;EACIF,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,QAAQ;EACfC,QAAQ,EAAE;AACd,CAAC,CACJ;AACD,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC/B,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,UAAU;MACX,OAAOF,KAAK,CAACG,GAAG,CAAEC,IAAI,IAAK;QACvB,IAAIA,IAAI,CAACR,EAAE,KAAKK,MAAM,CAACL,EAAE,EAAE;UACvB,OAAO;YAAE,GAAGQ,IAAI;YAAEN,QAAQ,EAAE,CAACM,IAAI,CAACN;UAAS,CAAC;QAChD,CAAC,MAAM;UACH,OAAOM,IAAI;QACf;MACJ,CAAC,CAAC;IACN;MACI,OAAOJ,KAAK;EACpB;AACJ,CAAC;AACD,SAASK,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,UAAU,CAACU,OAAO,EAAEJ,YAAY,CAAC;EAE3D,MAAMc,cAAc,GAAIL,IAAI,IAAK;IAC7BI,QAAQ,CAAC;MAAEN,IAAI,EAAE,UAAU;MAAEN,EAAE,EAAEQ,IAAI,CAACR;IAAG,CAAC,CAAC;EAC/C,CAAC;EAED,oBACIJ,OAAA,CAAAE,SAAA;IAAAgB,QAAA,EACKH,KAAK,CAACJ,GAAG,CAAEC,IAAI,iBACZZ,OAAA;MAAAkB,QAAA,gBACIlB,OAAA;QAAAkB,QAAA,gBACIlB,OAAA;UAAOU,IAAI,EAAC,UAAU;UAACS,OAAO,EAAEP,IAAI,CAACN,QAAS;UAACc,QAAQ,EAAEA,CAAA,KAAMH,cAAc,CAACL,IAAI;QAAE;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACtFZ,IAAI,CAACP,KAAK;MAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,WAEZ;IAAA,GANUZ,IAAI,CAACR,EAAE;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMZ,CACR;EAAC,gBACJ,CAAC;AAEX;AAACV,EAAA,CApBQD,KAAK;AAAAY,EAAA,GAALZ,KAAK;AAqBd,MAAMa,IAAI,GAAG5B,QAAQ,CAAC6B,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cAAC9B,OAAA,CAACa,KAAK;EAAAQ,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,CAAC;AAAA,IAAAC,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}